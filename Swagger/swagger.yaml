swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "2.0.0"
  title: "Swagger Document"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "nhom1@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "Web Shop"
    description: "Everything about your Shop"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "Users"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /Register:
    post:
      tags:
        - "Users"
      summary: "Add a new user"
      description: ""
      operationId: "addUser"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Creat a new user"
          required: true
          schema:
            $ref: ""
      responses:
        "405":
          description: "Invalid input"

  /Login:
    post:
      tags:
        - "Users"
      summary: "Log in to the system"
      operationId: "Login User"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object logged into the store"
          required: false
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /UpdateUsers:
    put:
      tags:
        - "Users"
      summary: "Update user to the system"
      operationId: "Update User"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Update the logged in user object to the store"
          required: false
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /FindByUser:
    get:
      tags:
        - "Users"
      summary: "Find users to the system"
      operationId: "Find Users"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Find the audience of users who are logged in to the store"
          required: false
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /GetAllUser:
    get:
      tags:
        - "Users"
      summary: "Get users to the system"
      operationId: "Get Users"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Get the audience of users who are logged in to the store"
          required: false
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /DeleteUser:
    delete:
      tags:
        - "Users"
      summary: "Delete users to the system"
      operationId: "Delete Users"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Delete the audience of users who are logged in to the store"
          required: true
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /Product:
    post:
      tags:
        - "Products"
      summary: "Add a new Products"
      description: ""
      operationId: "addProducts"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Creat a new products"
          required: true
          schema:
            $ref: ""
      responses:
        "405":
          description: "Invalid input"

  /GetAllProducts:
    get:
      tags:
        - "Products"
      summary: "Get All Products to the system"
      operationId: "Get Products"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Get all the products in the store."
          required: false
          schema:
            $ref: ""
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

  /Order:
    post:
      tags:
        - "Order"
      summary: "Add Order"
      description: ""
      operationId: "addOrder"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "ADD ORDER"
          required: true
          schema:
            $ref: ""
      responses:
        "405":
          description: "Invalid input"
